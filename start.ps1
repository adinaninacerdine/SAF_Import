# start.ps1 - Script de d√©marrage pour Windows
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "   MCTV - Syst√®me d'Import" -ForegroundColor Cyan
Write-Host "   D√©marrage de l'environnement" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# V√©rifier Docker
if (-not (Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå Docker n'est pas install√©" -ForegroundColor Red
    Write-Host "Installez Docker Desktop: https://www.docker.com/products/docker-desktop"
    exit 1
}

Write-Host "‚úÖ Docker d√©tect√©" -ForegroundColor Green
Write-Host ""

# Demander si on doit restaurer le backup
$restore = Read-Host "Voulez-vous restaurer le backup SQL? (o/N)"
Write-Host ""

if ($restore -eq "o" -or $restore -eq "O") {
    Write-Host "üöÄ D√©marrage de SQL Server..." -ForegroundColor Yellow
    docker-compose up -d sqlserver

    Write-Host "‚è≥ Attente de l'initialisation de SQL Server (60s)..." -ForegroundColor Yellow
    Start-Sleep -Seconds 60

    # V√©rifier les logs
    Write-Host ""
    Write-Host "üìã Logs SQL Server:" -ForegroundColor Cyan
    docker logs mctv-sqlserver --tail 20

    Write-Host ""
    Write-Host "üì¶ Restauration du backup..." -ForegroundColor Yellow

    # V√©rifier que le fichier existe
    $backupFile = "backup\SAF_MCTV_COMORES.bak"
    if (-not (Test-Path $backupFile)) {
        Write-Host "‚ùå Fichier de backup introuvable: $backupFile" -ForegroundColor Red
        Write-Host "Placez votre fichier .bak dans le dossier backup\" -ForegroundColor Yellow
        exit 1
    }

    Write-Host "‚úÖ Fichier trouv√©: $backupFile" -ForegroundColor Green
    $fileSize = [math]::Round((Get-Item $backupFile).Length / 1MB, 2)
    Write-Host "üìä Taille: $fileSize MB" -ForegroundColor Cyan

    # Cr√©er le dossier backup dans le conteneur
    Write-Host ""
    Write-Host "üìÅ Cr√©ation du dossier backup dans le conteneur..." -ForegroundColor Yellow
    docker exec mctv-sqlserver mkdir -p /var/opt/mssql/backup

    # Copier le backup
    Write-Host "üì§ Copie du backup dans le conteneur..." -ForegroundColor Yellow
    docker cp $backupFile mctv-sqlserver:/var/opt/mssql/backup/SAF_MCTV_COMORES.bak

    # V√©rifier la copie
    docker exec mctv-sqlserver ls -lh /var/opt/mssql/backup/

    # Attendre que SQL Server soit pr√™t
    Write-Host ""
    Write-Host "‚è≥ V√©rification que SQL Server est pr√™t..." -ForegroundColor Yellow
    $maxAttempts = 30
    $attempt = 0
    $ready = $false

    while ($attempt -lt $maxAttempts -and -not $ready) {
        $attempt++
        Write-Host "  Tentative $attempt/$maxAttempts..." -ForegroundColor Gray

        $result = docker exec mctv-sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Admin@123" -Q "SELECT 1" 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ SQL Server est pr√™t!" -ForegroundColor Green
            $ready = $true
        }
        else {
            Start-Sleep -Seconds 2
        }
    }

    if (-not $ready) {
        Write-Host "‚ùå SQL Server n'a pas d√©marr√© correctement" -ForegroundColor Red
        Write-Host "V√©rifiez les logs: docker logs mctv-sqlserver" -ForegroundColor Yellow
        exit 1
    }

    # Restaurer la base de donn√©es
    Write-Host ""
    Write-Host "üîÑ Restauration de la base de donn√©es..." -ForegroundColor Yellow
    Write-Host ""

    $restoreCommand = @"
RESTORE DATABASE [SAF_MCTV_COMORES]
FROM DISK = '/var/opt/mssql/backup/SAF_MCTV_COMORES.bak'
WITH MOVE 'SAF_MCTV_COMORES' TO '/var/opt/mssql/data/SAF_MCTV_COMORES.mdf',
     MOVE 'SAF_MCTV_COMORES_log' TO '/var/opt/mssql/data/SAF_MCTV_COMORES_log.ldf',
     REPLACE
"@

    docker exec mctv-sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Admin@123" -Q $restoreCommand

    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚úÖ Base de donn√©es restaur√©e avec succ√®s!" -ForegroundColor Green
        Write-Host ""

        # Statistiques
        Write-Host "üìä STATISTIQUES DE LA BASE:" -ForegroundColor Cyan
        Write-Host "-------------------------------------------" -ForegroundColor Cyan

        $statsQuery = @"
SELECT 'Utilisateurs' as Type, COUNT(*) as Nombre FROM UTILISATEURSSAF
UNION ALL
SELECT 'Agences', COUNT(*) FROM CF.CF_AGENCIAS
UNION ALL
SELECT 'Transactions', COUNT(*) FROM INFOSTRANSFERTPARTENAIRES
"@

        docker exec mctv-sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Admin@123" -d SAF_MCTV_COMORES -Q $statsQuery

        Write-Host ""
        Write-Host "‚è≥ Initialisation des tables de d√©duplication..." -ForegroundColor Yellow
        docker-compose run --rm backend node init-database.js
    }
    else {
        Write-Host ""
        Write-Host "‚ùå Erreur lors de la restauration" -ForegroundColor Red
        Write-Host "V√©rifiez les logs: docker logs mctv-sqlserver" -ForegroundColor Yellow
        exit 1
    }
}

# Build des images
Write-Host ""
Write-Host "üèóÔ∏è  Build des images Docker..." -ForegroundColor Yellow
docker-compose build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du build" -ForegroundColor Red
    exit 1
}

# D√©marrage des services
Write-Host ""
Write-Host "üöÄ D√©marrage de tous les services..." -ForegroundColor Yellow
docker-compose up -d

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du d√©marrage" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "‚è≥ Attente du d√©marrage des services (10s)..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

Write-Host ""
Write-Host "‚úÖ Services d√©marr√©s!" -ForegroundColor Green
Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  ACC√àS AUX SERVICES" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "  Backend:  http://localhost:3001" -ForegroundColor White
Write-Host "  SQL:      localhost:1433" -ForegroundColor White
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìä Statut des conteneurs:" -ForegroundColor Cyan
docker-compose ps
Write-Host ""
Write-Host "üìù Commandes utiles:" -ForegroundColor Cyan
Write-Host "  - Logs:    docker-compose logs -f" -ForegroundColor Gray
Write-Host "  - Stop:    docker-compose stop" -ForegroundColor Gray
Write-Host "  - Restart: docker-compose restart" -ForegroundColor Gray
Write-Host "  - Down:    docker-compose down" -ForegroundColor Gray
Write-Host ""
